KERNEL manages hardware, processes, I/O, Security etc.

Most kernel os are written in C language -- bcz it was very close to the hardware and high level 
                                            language and functionally usable
                                    
a process can run infintely threads but on one core can run 2 threads at a time

systemd -- a parent service that starts upon booting

every process follows parent-child relationship except systemd(itself act as a parent on behalf of kernel)

when we ask a os to do something we make a sys call

with threading you share memory but with multithreading you don'that

linux is made up of -- Kernel,GNU Utilities, Desktop environment, applications, Shell

Shell is something which stands between user and os. It understands the commands & breaks it down for os to execute

tty- tely type termunal - without gui
pts - psuedo terminal - with graphics

adding a new user account- sudo useradd -m -d /home/example -s /bin/bash -u 222 example
adding password - sudo passwd example
switch account - su - example

add permissions : chmod o+w destination/file_name | --o for others -- w for write access

set rwx rwx rwx permissions on a file --  chmod +x destination/file_name
                                          chmod u=rwx,g=rwx,o=rwx /destination
                                        
remove x permission from user and group and wx for others - chmod u-x,g-x,o-wx destination/file_name

delete account: sudo userdel -r example

getent passwd example --check if account is there or not

forwarding the error (redirection of files) -- 
ls -l /tmp/example /tmp/dhfhjdjj(gives error) 2>/tmp/error
forwards the error from dhfhjdjj to error file


~